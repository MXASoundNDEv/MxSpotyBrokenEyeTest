# HTTP -> redirection HTTPS + ACME
server {
    listen 80;
    server_name brokeneye.space www.brokeneye.space;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS avec proxy vers app dans le mÃªme pod (localhost du pod)
server {
    listen 443 ssl http2;
    server_name brokeneye.space www.brokeneye.space;

    ssl_certificate /etc/letsencrypt/live/brokeneye.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/brokeneye.space/privkey.pem;

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }

    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
    }

    location /health {
        proxy_pass http://127.0.0.1:3000/health;
        proxy_set_header Host $host;
    }

    error_log /var/log/nginx/brokeneye_ssl_error.log;
    access_log /var/log/nginx/brokeneye_ssl_access.log;
}
