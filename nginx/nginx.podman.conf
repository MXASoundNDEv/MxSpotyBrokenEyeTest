# Configuration Nginx pour MxSpoty BlindTest - Optimisée Podman Ubuntu 24

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuration des événements
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configuration HTTP
http {
    # Types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Format des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Logs d'accès
    access_log /var/log/nginx/access.log main;
    
    # Optimisations performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Configuration upstream pour l'app
    upstream mxspoty_backend {
        server mxspoty-blindtest-app:3000;
        keepalive 32;
    }
    
    # Configuration serveur principal
    server {
        listen 80;
        listen [::]:80;
        server_name localhost _;
        
        # Taille max des uploads
        client_max_body_size 10M;
        
        # Buffers
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;
        
        # Timeouts
        client_body_timeout 12;
        client_header_timeout 12;
        keepalive_timeout 15;
        send_timeout 10;
        
        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
        
        # CSP pour Spotify
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://sdk.scdn.co; connect-src 'self' https://api.spotify.com https://accounts.spotify.com; style-src 'self' 'unsafe-inline'; img-src 'self' https://*.spotifycdn.com data:; font-src 'self' data:; media-src 'self' https://*.spotifycdn.com";
        
        # Logs spécifiques
        access_log /var/log/nginx/mxspoty-access.log main;
        error_log /var/log/nginx/mxspoty-error.log;
        
        # Root et index
        root /usr/share/nginx/html;
        index index.html;
        
        # Health check (sans logs)
        location = /health {
            proxy_pass http://mxspoty_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://mxspoty_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts API
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }
        
        # Authentication endpoints
        location ~ ^/(login|callback|refresh-token) {
            proxy_pass http://mxspoty_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pas de cache pour auth
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
        
        # Assets statiques avec cache
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://mxspoty_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Cache long pour assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Application principale
        location / {
            proxy_pass http://mxspoty_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Monitoring endpoints (Prometheus)
        location /metrics {
            proxy_pass http://mxspoty_backend/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Restriction d'accès (optionnel)
            # allow 172.20.0.0/16;  # Réseau Docker
            # deny all;
        }
        
        # Gestion des erreurs personnalisées
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # Configuration HTTPS (à activer en production)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    #     ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Reprendre la configuration du serveur HTTP
    # }
}

# Configuration spécifique Podman:
# - Utilise les noms de conteneurs pour upstream
# - Headers de sécurité adaptés à l'app Spotify
# - Gestion optimisée des assets statiques  
# - Logs détaillés pour debugging
# - Configuration prête pour SSL
# - Monitoring Prometheus intégré
